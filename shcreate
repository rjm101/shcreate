#!/bin/bash

# Create a new shell script on the fly
# Checks your command is not already in use,
# generates shell file with shebang,
# sets executable permissions,
# writes to ~/bin or user specified directory
# (optional) adds directory to .bash_profile for home root access
# and launches file in your favourite editor
# Author richard malcolm
# 
# usage example:
# shcreate [command] [shell directory path (optional)]
source ./prmpt 
bitbucket=/dev/null

function generateFile() {
	checkOpts "$1"
	printLine
	setFile "$1" "$2"
	verifyAvailableCommand
	setupShellDirectory
	checkExistingFile
	setFilePermissions
	addTemplateContents
	setGlobalCommand
	showSuccess
}

# check for help prompt option
function checkOpts() {
	if [[ "$1" == "help" ]]; then
		echo "shcreate [command] [shell directory path (optional)]"
		exit 0;
	fi
}

function setFile() {
	setFileName "$1"
	setDirectory "$2"
	filepath="${filedir}/${filename}"
}

function setFileName() {
	filename="$1"
	if [[ ! "$filename" ]]; then
		echo "Sorry, it looks like you did not specify a valid file name"
		exit 1;
	fi
}

# set directory if specified otherwise set default home
function setDirectory() {
	customdirectory=$1
	if [[ "$customdirectory" ]]; then
		# remove trailing slash on path check
		filedir="$(echo $customdirectory | sed 's:/*$::')"
	else
		filedir="${HOME}/bin"
	fi
}

# check if command already exists
function verifyAvailableCommand() {
	if type "$filename" > $bitbucket 2>&1; then
		echo "Sorry, '$filename' command already exists"
		exit 2;
	else
		echo "Command '$filename' check: OK"
	fi
}

# check if directory exists and creates one if not
function setupShellDirectory() {
	if [[ ! -d $filedir ]]; then
		if mkdir -- "$filedir"; then
			echo "Created shell directory: ${filedir}"
			$createddirectory=true
		else 
			echo "Could not create shell directory: ${filedir}"
			exit 3;
		fi
	fi
}

# check if file already exists if not create one
function checkExistingFile() {
	if [[ -e $filepath && !$createddirectory ]]; then
		echo "Sorry, this file already exists in:"
		echo $filepath
		exit 4;
	else 
		# create the file
		touch -- $filepath
	fi 
}

# set executable permission of file
function setFilePermissions() {
	chmod u+x -- $filepath

	# check file permission
	if [[ ! $(stat -l $filepath | grep "^-rwxr") ]]; then
		echo "Failed to set executable permissions on $filepath";
		exit 5;
	else 
		echo "Set shell to executable: OK"
	fi
}

# Write contents of file
function addTemplateContents() {
	template="#!/bin/bash\n\n# Template generated by shcreate\n# Date created $(date)\n# Created by ${USER}\n\n\n"
	if printf "$template" >> $filepath; then
		echo "Template created: OK"
	else
		echo "WARNING: Could not add contents to file"
	fi
}

function setGlobalCommand() {
	# check if ~/bin|custom shell directory already exists in PATH
	if [[ ! "$PATH" =~ (^|:)"$filedir"(:|$) ]]; then
		# check if bash profile exists
		bashprofile="${HOME}/.bash_profile"
		# check if directory is in home .bash_profile
		if [[ "$(cat "$bashprofile" | grep "$filedir" | grep "PATH")" || "$(echo $PATH | grep "$filedir")" ]]; then
			echo "Check global command access: Bash directory already specified in \$PATH"
		else
			if [[ -e $bashprofile ]]; then
				# prompt if user wants to run command globally? 
				echo "$filedir is not in your environment PATH"
				addPathToBashProfile $bashprofile
			else 
				echo "Bash directory not found in \$PATH or $bashprofile, this command will not be global."
				generateBashProfile $bashprofile
			fi
		fi
	fi
}

# provide the option to generate bash profile in the event it is not available
function generateBashProfile() {
	bashprofile=$1
	if prmpt "Do you want to generate a .bash_profile to your home directory? [Y/N]"; then
		touch -- $bashprofile
		printf "if [ -n "\$BASH_VERSION" ]; then\n\tif [ -f "\$HOME/.bashrc" ]; then\n\t\t. "\$HOME/.bashrc"\n\tfi\nfi\n\nif [ -d "\$HOME/bin" ]; then\n\tPATH="\$HOME/bin:\$PATH"\nfi" > $bashprofile
		if [[ -e $bashprofile ]]; then
			addPathToBashProfile $bashprofile
		fi
	fi
}

# ask if user wants to add shell path to bash_profile
function promptToAddPathToProfile() {
	bashprofile=$1
	if prmpt "Do you want to add this command to ~/.bash_profile? [Y/N]"; then
		addPathToBashProfile $bashprofile
	fi
}

# add shell path to bash_profile
function addPathToBashProfile() {
	bashprofile=$1
	if printf "\nexport PATH=\$PATH:$filedir" >> "$bashprofile"; then
		printf "\n$filedir added to ${bashprofile}"
	else
		echo "WARNING: could not add shell directory export to ${bashprofile}"
	fi
}

function printLine() {
	printf "\n------------------------------------------------\n"
}

function showSuccess() {
	printLine
	printf "*** Generated shell file successfully! ***\n"
	openEditor
}

# open shell script in users editor
function openEditor() {
	if [[ $EDITOR ]] && type $EDITOR > $bitbucket 2>&1; then 
		$EDITOR "$filepath"
	else 
		echo "WARNING: Not starting editor as \$EDITOR command is not found"
		echo "Your file has been saved to: ${filepath}"
	fi
	exit 0;
}

# init
generateFile "$1" "$2"